{"version":3,"sources":["components/Questions.js","components/Firstpage.js","App.js","index.js"],"names":["Questions","props","React","useState","fck_btns","fck_btns_setMEUP","useEffect","shakeIt","updatedAnswersCorrect","updatedAnswersIncorrect","sort","Math","random","incorrect_answers","map","button","id","className","onClick","e","console","log","target","classList","add","disabled","atob","correct_answer","question","Firstpage","toggleFirstPage","App","questionData","setQuestionData","firstPage","setFirstPage","fetch","then","res","json","data","results","updatedQuestions","item","lgn","length","nanoid","prevvalue","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAIe,SAASA,EAAUC,GAChC,MAAqCC,IAAMC,WAA3C,mBAAOC,EAAP,KAAiBC,EAAjB,KAIAC,qBAAU,WACR,IAAIC,EAAU,CAACC,EAAuBC,GACtCF,EAAQG,MAAK,kBAAMC,KAAKC,SAAW,MACnCP,EAAiBE,KAChB,IAEH,IAAME,EAA0BR,EAAMY,kBAAkBC,KAAI,SAACC,GAC3D,OACE,wBACEC,GAAG,WACHC,UAAU,OACVC,QAAS,SAACC,GACRC,QAAQC,IAAIF,EAAEG,QACdH,EAAEG,OAAOC,UAAUC,IAAI,QACvBL,EAAEG,OAAOG,UAAW,GANxB,SASGC,KAAKX,QAINP,EACJ,wBACEQ,GAAG,WACHC,UAAU,OACVC,QAAS,SAACC,GACNA,EAAEG,OAAOC,UAAUC,IAAI,SACvBL,EAAEG,OAAOG,UAAW,GAL1B,SASGC,KAAKzB,EAAM0B,kBAIhB,OACE,kCAEA,sBAAKV,UAAU,kBAAf,UACE,4BAAIS,KAAKzB,EAAM2B,YACf,qBAAKX,UAAU,gBAAf,SACCb,SC/CQ,SAASyB,EAAU5B,GAC9B,OACI,sBAAKgB,UAAU,sCAAf,UACI,mEACA,wBAAQC,QAASjB,EAAM6B,gBAAvB,sBCqCGC,MAtCf,WACE,MAAwC7B,IAAMC,SAAS,IAAvD,mBAAO6B,EAAP,KAAqBC,EAArB,KACA,EAAkC/B,IAAMC,UAAS,GAAjD,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAAgBjC,IAAMC,SAAS,GAA/B,oBAGAG,qBAAU,WACR8B,MAAM,iFACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIP,EAAgBO,EAAKC,cACrC,IAOFrB,QAAQC,IAAIW,GACZ,IAAMU,EAAmBV,EAAalB,KAAI,SAAA6B,GACxC,OAAO,cAAC3C,EAAD,CAEL4B,SAAUe,EAAKf,SACfD,eAAgBgB,EAAKhB,eACrBd,kBAAmB8B,EAAK9B,kBACxB+B,IAAOZ,EAAaa,QAJfC,kBAQT,OACE,sBAAK7B,UAAU,MAAf,UACgB,GAAbiB,EAAqB,cAACL,EAAD,CAAWC,gBAlBrC,WACEK,GAAa,SAAAY,GAAS,OAAKA,QAiB+C,KACvEb,GAAa,yEACbA,GAAY,yDAA2B,mBAAGc,KAAK,uBAAR,qBAA3B,QACZd,GAAaQ,MCjCpBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.fb4e8dd4.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"../App.css\";\r\n\r\nexport default function Questions(props) {\r\n  const [fck_btns, fck_btns_setMEUP] = React.useState();\r\n\r\n\r\n  // Shake it Baby! Shake it!\r\n  useEffect(() => {\r\n    let shakeIt = [updatedAnswersCorrect, updatedAnswersIncorrect];\r\n    shakeIt.sort(() => Math.random() - 0.5);\r\n    fck_btns_setMEUP(shakeIt);\r\n  }, []);\r\n\r\n  const updatedAnswersIncorrect = props.incorrect_answers.map((button) => {\r\n    return (\r\n      <button\r\n        id=\"inc_answ\"\r\n        className=\"btns\"\r\n        onClick={(e) => {\r\n          console.log(e.target);\r\n          e.target.classList.add(\"rred\");\r\n          e.target.disabled = true;\r\n        }}\r\n      >\r\n        {atob(button)}\r\n      </button>\r\n    );\r\n  });\r\n  const updatedAnswersCorrect = (\r\n    <button\r\n      id=\"cor_answ\"\r\n      className=\"btns\"\r\n      onClick={(e) => {\r\n          e.target.classList.add(\"bblue\");\r\n          e.target.disabled = true;\r\n\r\n      }}\r\n    >\r\n      {atob(props.correct_answer)}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <section>\r\n\r\n    <div className=\"uber--container\">\r\n      <p>{atob(props.question )}</p>\r\n      <div className=\"btn-container\">\r\n      {fck_btns}\r\n      </div>\r\n    </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport '../App.css';\r\n\r\nexport default function Firstpage(props){\r\n    return(\r\n        <div className=\"firstpage-container uber--container\">\r\n            <h1>Test your knowledge! ðŸ“’</h1>\r\n            <button onClick={props.toggleFirstPage} >Start</button>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\"\nimport { nanoid } from 'nanoid'\nimport Questions from \"./components/Questions\"\nimport Firstpage from \"./components/Firstpage\";\nimport './App.css';\n\nfunction App() {\n  const [questionData, setQuestionData] = React.useState([])\n  const [firstPage, setFirstPage] = React.useState(false)\n  const [score] = React.useState(5)\n\n\n  useEffect(()=> {\n    fetch(\"https://opentdb.com/api.php?amount=10&category=15&type=multiple&encode=base64\")\n      .then(res => res.json())\n      .then(data => setQuestionData(data.results))\n  },[])\n\n  function toggleFirstPage(){\n    setFirstPage(prevvalue => !prevvalue)\n  }\n\n\n  console.log(questionData)\n  const updatedQuestions = questionData.map(item => {\n    return <Questions \n      key={nanoid()}\n      question={item.question} \n      correct_answer={item.correct_answer}\n      incorrect_answers={item.incorrect_answers}\n      lgn = {questionData.length}\n      />\n  })\n\n  return (\n    <div className=\"App\">\n      {firstPage == false ? <Firstpage toggleFirstPage={toggleFirstPage} /> : null}\n      {firstPage && <h1>Test your GAMINGðŸŽ² knowledge!</h1>}\n      {firstPage &&<h2>data provided by API - <a href=\"https://opentdb.com/\">OpentDB</a>  </h2>}\n      {firstPage && updatedQuestions}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}